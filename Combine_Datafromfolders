import os
import pandas as pd

def parse_cell(cell):
    # This function separates letters and numbers in a cell reference, e.g., 'C5' -> ('C', 5)
    for index, char in enumerate(cell):
        if char.isdigit():
            return (cell[:index], int(cell[index:]) - 1)  # Convert Excel 1-based index to 0-based index

def read_excel_sheet(file_path, sheet_name, start_row, end_cell):
    # Calculate parameters for reading the sheet
    col_start, row_start = parse_cell(start_row)
    col_end, row_end = parse_cell(end_cell)
    col_range = f"{col_start}:{col_end}"
    
    # Read the Excel file with specified parameters
    df = pd.read_excel(file_path, sheet_name=sheet_name, skiprows=row_start, usecols=col_range, engine='openpyxl')
    return df

def read_excel_files(root_folder, control_df):
    all_data = []  # List to collect DataFrames from all files
    
    # Walk through all files in the directory structure
    for subdir, dirs, files in os.walk(root_folder):
        template_name = os.path.basename(subdir)  # Each subfolder represents a template
        
        for file in files:
            if file.endswith('.xlsx'):
                file_path = os.path.join(subdir, file)
                region_name = os.path.splitext(file)[0]  # Use file name (without extension) as region name
                
                try:
                    print(f"Processing file: {file_path}")
                    xls = pd.ExcelFile(file_path)  # Open the file to read its sheets
                    
                    # Process each sheet specified in the control file for this template
                    template_params = control_df[control_df['Template Name'] == template_name]
                    
                    for _, row in template_params.iterrows():
                        sheet_name = row['Sheet Name']
                        start_cell = row['Start Cell']
                        end_cell = row['End Cell']
                        
                        # Check if the sheet exists in the Excel file
                        if sheet_name in xls.sheet_names:
                            # Read the specified sheet and cell range
                            data = read_excel_sheet(file_path, sheet_name, start_cell, end_cell)
                            
                            # Add columns for template, region, and sheet names
                            data['Template Name'] = template_name
                            data['Region Name'] = region_name
                            data['Sheet Name'] = sheet_name
                            
                            # Append the data to the all_data list
                            all_data.append(data)
                        else:
                            print(f"Sheet {sheet_name} not found in {file}")
                except Exception as e:
                    print(f"Error processing file {file_path}: {e}")
    
    # Concatenate all collected data into a single DataFrame
    final_df = pd.concat(all_data, ignore_index=True)
    return final_df

# Example usage
root_folder = r'C:\Users\dell\Compare tool\D'
control_file_path = r'C:\Users\dell\control.xlsx'

# Load the control sheet, which includes template names, sheet names, start and end cell references
control_df = pd.read_excel(control_file_path)  
# Expected control_df columns: 'Template Name', 'Sheet Name', 'Start Cell', 'End Cell'

# Read Excel files based on the control file and directory structure
final_df = read_excel_files(root_folder, control_df)

# Display the resulting DataFrame
print(final_df)
