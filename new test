import os
import pandas as pd

def parse_cell(cell):
    # This function separates letters and numbers in a cell reference, e.g., 'C5' -> ('C', 5)
    for index, char in enumerate(cell):
        if char.isdigit():
            return (cell[:index], int(cell[index:]) - 1)  # Convert Excel 1-based index to 0-based index

def read_excel_sheet(file_path, sheet_name, start_row, end_cell, concatenate_cols):
    # Calculate parameters for reading the sheet
    col_start, row_start = parse_cell(start_row)
    col_end, row_end = parse_cell(end_cell)
    col_range = f"{col_start}:{col_end}"
    
    # Read the Excel file with specified parameters
    df = pd.read_excel(file_path, sheet_name=sheet_name, skiprows=row_start, usecols=col_range, engine='openpyxl')
    
    # Handle concatenating columns
    if concatenate_cols:
        col_list = [col.strip() for col in concatenate_cols.split(',')]
        df['Unique Column'] = df[col_list].apply('_'.join, axis=1)  # Concatenate the specified columns
    else:
        df['Unique Column'] = df.iloc[:, 0]  # Use the first column as the unique column
    
    return df

def read_excel_files(root_folder, control_df):
    # Initialize an empty list to store DataFrames
    dfs = []
    
    # Walk through all files in the directory structure
    for subdir, dirs, files in os.walk(root_folder):
        for file in files:
            if file.endswith('.xlsx'):
                file_path = os.path.join(subdir, file)
                try:
                    print(f"Processing file: {file_path}")
                    # Open the file to read its sheets
                    xls = pd.ExcelFile(file_path)
                    for sheet_name in xls.sheet_names:
                        # Get parameters for reading this sheet from control file
                        params = control_df[control_df['Sheet Name'] == sheet_name]
                        if not params.empty:
                            start_row = params['Start Cell'].values[0]
                            end_cell = params['End Cell'].values[0]
                            concatenate_cols = params['Concatenate Columns'].values[0] if params['Fix Merge Cells'].values[0] == 'Yes' else None
                            # Read the specified sheet with given parameters
                            data = read_excel_sheet(file_path, sheet_name, start_row, end_cell, concatenate_cols)
                            # Add sheet name as a column
                            data['Sheet Name'] = sheet_name
                            # Append the DataFrame to the list
                            dfs.append(data)
                        else:
                            print(f"No parameters found for sheet {sheet_name} in {file}")
                except Exception as e:
                    print(f"Error processing file {file_path}: {e}")

    # Concatenate all DataFrames in the list
    if dfs:
        master_df = pd.concat(dfs, ignore_index=True)
        return master_df
    else:
        print("Error: No data to concatenate.")
        return None

# Example usage
root_folder = r'C:\Users\dell\Compare tool\D'
control_file_path = r'C:\Users\dell\control.xlsx'
control_df = pd.read_excel(control_file_path)  # Load the control sheet
master_df = read_excel_files(root_folder, control_df)
if master_df is not None:
    print(master_df)  # Display the concatenated DataFrame